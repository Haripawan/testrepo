Option Explicit

Dim objPowerDesigner, objModel, objDiagram, objSelection, selectedTable
Dim column, i, avroSchema, fieldArray

' Get the active PowerDesigner application instance
Set objPowerDesigner = CreateObject("PowerDesigner.Application")

' Check if PowerDesigner is running
If objPowerDesigner Is Nothing Then
    MsgBox "Error: PowerDesigner is not running.", vbCritical
    WScript.Quit
End If

' Get the active model
Set objModel = objPowerDesigner.ActiveModel

' Check if a model is open
If objModel Is Nothing Then
    MsgBox "Error: No active model is currently open.", vbCritical
    WScript.Quit
End If

' Get the active diagram (needed for selection)
Set objDiagram = objModel.ActiveDiagram

' Check if there is an active diagram
If objDiagram Is Nothing Then
    MsgBox "Error: No active diagram found. Please open a diagram.", vbCritical
    WScript.Quit
End If

' Get the selected objects from the active diagram
Set objSelection = objDiagram.GetSelectedObjects

' Check if any object is selected
If objSelection.Count = 0 Then
    MsgBox "Error: No object selected in the active diagram.", vbCritical
    WScript.Quit
End If

' Loop through selected objects to find a Table
For i = 0 To objSelection.Count - 1
    If TypeName(objSelection.Item(i)) = "Table" Then
        Set selectedTable = objSelection.Item(i)
        Exit For
    End If
Next

' Check if a table was found in the selection
If selectedTable Is Nothing Then
    MsgBox "Error: No table selected. Please select a table.", vbCritical
    WScript.Quit
End If

' Build the Avro Schema
avroSchema = "{ " & vbCrLf
avroSchema = avroSchema & "  ""type"": ""record""," & vbCrLf
avroSchema = avroSchema & "  ""name"": """ & selectedTable.Name & """," & vbCrLf
avroSchema = avroSchema & "  ""fields"": [" & vbCrLf

' Process columns
fieldArray = ""
For Each column In selectedTable.Columns
    Dim avroType
    avroType = MapToAvroType(column.DataType)

    fieldArray = fieldArray & "    { ""name"": """ & column.Name & """, ""type"": """ & avroType & """ }, " & vbCrLf
Next

' Remove last comma and newline
If Len(fieldArray) > 0 Then fieldArray = Left(fieldArray, Len(fieldArray) - 4) & vbCrLf

' Close the JSON structure
avroSchema = avroSchema & fieldArray & "  ]" & vbCrLf
avroSchema = avroSchema & "}"

' Display Avro schema
MsgBox avroSchema, vbInformation, "Avro Schema for Table: " & selectedTable.Name

' Write schema to file
Dim objFSO, objFile, outputPath
outputPath = "C:\temp\" & selectedTable.Name & "_schema.avsc" ' Change this path as needed

Set objFSO = CreateObject("Scripting.FileSystemObject")
Set objFile = objFSO.CreateTextFile(outputPath, True)
objFile.Write avroSchema
objFile.Close

MsgBox "Avro schema saved to: " & outputPath, vbInformation

' Cleanup
Set objFile = Nothing
Set objFSO = Nothing
Set objSelection = Nothing
Set objDiagram = Nothing
Set objModel = Nothing
Set objPowerDesigner = Nothing

' Function to map PowerDesigner Data Types to Avro Data Types
Function MapToAvroType(pdType)
    Select Case LCase(pdType)
        Case "integer", "smallint", "bigint"
            MapToAvroType = "int"
        Case "decimal", "numeric", "float", "real", "double precision"
            MapToAvroType = "double"
        Case "char", "varchar", "text", "nchar", "nvarchar"
            MapToAvroType = "string"
        Case "date", "datetime", "timestamp"
            MapToAvroType = "string" ' Avro does not have native date type, usually handled as ISO 8601 string
        Case "boolean"
            MapToAvroType = "boolean"
        Case Else
            MapToAvroType = "string" ' Default to string if unknown type
    End Select
End Function